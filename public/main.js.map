{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/alert-dialog/alert-dialog.component.css","webpack:///./src/app/components/alert-dialog/alert-dialog.component.html","webpack:///./src/app/components/alert-dialog/alert-dialog.component.ts","webpack:///./src/app/components/main/documents/documents.component.css","webpack:///./src/app/components/main/documents/documents.component.html","webpack:///./src/app/components/main/documents/documents.component.ts","webpack:///./src/app/components/main/main.component.css","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/main/registration/registration.component.css","webpack:///./src/app/components/main/registration/registration.component.html","webpack:///./src/app/components/main/registration/registration.component.ts","webpack:///./src/app/components/navigation/navigation.component.css","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/components/pdf-dialog/pdf-dialog.component.css","webpack:///./src/app/components/pdf-dialog/pdf-dialog.component.html","webpack:///./src/app/components/pdf-dialog/pdf-dialog.component.ts","webpack:///./src/app/config/config.ts","webpack:///./src/app/service/ipfs-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///http (ignored)","webpack:///https (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navigation></app-navigation>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { IpfsService } from './service/ipfs-service.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'app';\n\n\tconstructor(private ipfsService : IpfsService) {\n\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { IpfsService } from './service/ipfs-service.service';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegistrationComponent } from './components/main/registration/registration.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatToolbarModule, MatFormFieldModule, MatInputModule, MatDialogModule, MatIconModule} from '@angular/material';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { DocumentsComponent } from './components/main/documents/documents.component';\nimport { FormsModule } from '@angular/forms';\nimport { AlertDialogComponent } from './components/alert-dialog/alert-dialog.component';\nimport { MainComponent } from './components/main/main.component';\nimport { PdfDialogComponent } from './components/pdf-dialog/pdf-dialog.component';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'registration', pathMatch: 'full' },\n\t{ path: 'registration', component: MainComponent },\n//\t{ path: '...', component: DocumentsComponent },\n\t{ path: '**', redirectTo: 'registration', pathMatch: 'full'  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    NavigationComponent,\n    DocumentsComponent,\n    AlertDialogComponent,\n    MainComponent,\n    PdfDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatIconModule,\n    PdfViewerModule,\n    RouterModule.forRoot(routes, { useHash: true }),\n  ],\n  providers: [IpfsService],\n  entryComponents: [\n    AlertDialogComponent,\n    PdfDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 matDialogTitle>{{title}}</h2>\\n<mat-dialog-content>\\n  <p>{{message}}</p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button matDialogClose=\\\"ok\\\" color=\\\"primary\\\">Ok</button>\\n</mat-dialog-actions>\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n\n@Component({\n  selector: 'alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.css']\n})\nexport class AlertDialogComponent implements OnInit {\n\n  title:string;\n  message:string;\n\n  constructor(public dialogRef: MatDialogRef<AlertDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { \n    this.title = data.title;\n    this.message = data.message;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".documents {\\n    background: rgb(255, 255, 255);\\n    height: 92vh;\\n    text-align: center;\\n    float: left;\\n    width: 50%;\\n}\\n\\n.documents-show-buttton {\\n    margin-top: 40vh;\\n}\"","module.exports = \"<div class=\\\"documents\\\">\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"documents-show-buttton\\\" (click)=\\\"showDocument()\\\">Show document</button>   \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { IpfsService } from '../../../service/ipfs-service.service';\nimport {AlertDialogComponent as AlertDialog} from '../../alert-dialog/alert-dialog.component';\n\n@Component({\n\tselector: 'app-documents',\n\ttemplateUrl: './documents.component.html',\n\tstyleUrls: ['./documents.component.css']\n})\nexport class DocumentsComponent implements OnInit {\n\n\tconstructor(private ipfsService : IpfsService, public dialog: MatDialog) {\n\t\t\n\t}\n\n\tngOnInit() {\n\n\t}\n\n\tshowDocument(){\n\t\tthis.ipfsService.getDocument('QmVTaCbtLaasDniwD2Tr8mPmstzPwnDnkTEw1mkpfeJ3Dz');\n\t}\n\n}\n","module.exports = \".main {\\n    background: white;\\n    height: 84vh;\\n    text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"main\\\">\\n    <app-registration></app-registration>\\n    <app-documents></app-documents>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".registration {\\n    background: rgb(255, 255, 255);\\n    height: 92vh;\\n    text-align: center;\\n    float: left;\\n    width: 50%;\\n\\n}\\n\\n.registration-user-name-input {\\n    margin-top: 30vh;\\n    width: 334px;\\n}\\n\\n.registration-file-wrapper {\\n    margin-top: 5vh;\\n    margin-bottom: 10vh;\\n}\\n\\n.registration-file-input {\\n    margin-right: 10px;\\n    width: 300px;\\n}\\n\\n.registration-file-open-buttton {\\n    color:#3F51B5;\\n    font-size: 33px;\\n    vertical-align: bottom;\\n    padding-bottom: 25px;\\n\\n}\\n\\n.registration-register-buttton {\\n    margin-top: 5vh;\\n}\"","module.exports = \"<div class=\\\"registration\\\">\\n\\t<mat-form-field class=\\\"registration-user-name-input\\\"> \\n\\t\\t<input matInput placeholder=\\\"Document id\\\" [value]=\\\"documentId\\\"> \\n\\t</mat-form-field> \\n\\t<div class=\\\"registration-file-wrapper\\\">\\n\\t\\t<mat-form-field class=\\\"registration-file-input\\\"> \\n\\t\\t\\t<input matInput placeholder=\\\"File name\\\" value=\\\"{{fileName}}\\\"> \\n\\t\\t</mat-form-field> \\n\\t\\t<input type=\\\"file\\\" id=\\\"upload\\\" style=\\\"display:none\\\" accept=\\\".pdf\\\" (change)=\\\"getFileInfo($event.target.files[0])\\\">\\n\\t\\t<label for=\\\"upload\\\" >\\n\\t\\t\\t<mat-icon class=\\\"registration-file-open-buttton\\\" >description</mat-icon>\\n\\t\\t</label>\\n\\t</div>\\n\\t<button mat-raised-button color=\\\"primary\\\" class=\\\"registration-register-button\\\" (click)=\\\"registerFile()\\\">Register</button> \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { IpfsService } from '../../../service/ipfs-service.service';\nimport {AlertDialogComponent as AlertDialog} from '../../alert-dialog/alert-dialog.component';\nimport * as base64 from 'base64-arraybuffer';\n\n@Component({\n\tselector: 'app-registration',\n\ttemplateUrl: './registration.component.html',\n\tstyleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n\tdocumentId : string = \"\";\n\tfileName : string = \"\";\n\tfile : File;\n\n\tconstructor(private ipfsService : IpfsService, private dialog: MatDialog) { \n\n\t}\n\n\tngOnInit() {\n\t}\n\n\tgetFileInfo(file) {\n\t\t//console.log(file.name);\n\t\tthis.fileName = file.name;\n\t\tthis.file = file;\n\t}\n\n\tregisterFile() {\n\n\t\tlet reader = new FileReader();\n\t\treader.onload = () => {\n\t\t\tlet str64 = base64.encode(reader.result);\n\t\t\t//console.log(str64);\n\t\t};\n\t\treader.readAsArrayBuffer(this.file);\n/*\n\t\tthis.dialog.closeAll();\n\n\t\tlet dialogRef = this.dialog.open(AlertDialog,{\n\t\t\tminWidth: '300px',\n\t\t\tdata: { \n\t\t\t\ttitle:\"Test\", \n\t\t\t\tmessage:this.file\n\t\t\t} \n\t\t});\n*/\n\t}\n}\n","module.exports = \"\\n.navi {\\n    height: 8vh;\\n}\\n\\n.navi-button {\\n    margin-right: 3vw;\\n}\\n\"","module.exports = \"<mat-toolbar class =\\\"navi\\\" color=\\\"primary\\\">\\n  <span class=\\\"navi-button\\\" routerLink=\\\"/registration\\\">Registration</span> \\n  <span class=\\\"navi-button\\\" routerLink=\\\"/...\\\">...</span> \\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<mat-dialog-content>\\n\\t<pdf-viewer [src]=\\\"dataBuffer\\\" [render-text]=\\\"true\\\" style=\\\"display: block;\\\"></pdf-viewer>\\n</mat-dialog-content>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport * as base64 from 'base64-arraybuffer';\n\n@Component({\n\tselector: 'app-pdf-dialog',\n\ttemplateUrl: './pdf-dialog.component.html',\n\tstyleUrls: ['./pdf-dialog.component.css']\n})\nexport class PdfDialogComponent implements OnInit {\n\n\tdataBuffer : ArrayBuffer;\n\tdataString : string;\n\n\tconstructor(public dialogRef: MatDialogRef<PdfDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { \n\t\tthis.dataBuffer = base64.decode(data.data);\n\t\tthis.dataString = atob(data.data);\n\t}\n\n\tngOnInit() {\n\n\t}\n\n}\n","export class Config {\n    static apiServer : string = \"http://localhost:3000\";\n    static apiVersion : string = \"/api/v1\";\n   // static wsServer : string = \"ws://localhost:3000\";\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams  } from '@angular/common/http';\nimport { Config } from '../config/config';\nimport { MatDialog } from '@angular/material';\nimport * as base64 from 'base64-arraybuffer';\nimport {PdfDialogComponent as PdfDialog} from '../components/pdf-dialog/pdf-dialog.component';\n\n@Injectable()\nexport class IpfsService {\n\n\tipfs: any;\n\n\tconstructor(public http: HttpClient, public dialog: MatDialog) {\n\n\t}\n\n\tgetDocument(id) {\n\n\t\tif(id) {\n\n\t\t\t//let params = new HttpParams().set('id', id);\n\t\t\tlet params = new HttpParams().set('hash', id);\n\n\t\t\treturn this.http.get(`${Config.apiServer}/document`,{ params: params }).subscribe(\n\t\t\t\tres => {\n\t\t\t\t\n\t\t\t\t\t  if(res['code'] == 0 && res['data']){\n\n\t\t\t\t\t\tthis.dialog.closeAll();\n\n\t\t\t\t\t\tlet dialogRef = this.dialog.open(PdfDialog,{\n\t\t\t\t\t\t\tminWidth: '600px',\n\t\t\t\t\t\t\tdata: { \n\t\t\t\t\t\t\t\t'data' : res['data']\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\t//let balance = res['data']['balance'];\n\t\t\t\t\t\t//console.log(balance);\n\t\t\t\t\t\t//this.store.dispatch({ type: ETH_BALACNE,\n\t\t\t\t\t\t//\t'balance':balance,\n\t\t\t\t\t\t//});\n\t\t\t\t\t}\t\t\t \n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tconsole.log(\"IpfsService getDocument error occured\");\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t}\n\t}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}